{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","base/defaultContacts.js","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/Section/Section.jsx","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","defaultContacts","id","name","phone","deleteContacts","createAction","changeFilter","addContacts","payload","uuid","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","Section","children","title","ContactsForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","map","includes","isAdded","alert","onAddContacts","className","s","form","onSubmit","htmlFor","type","value","onChange","target","input","disabled","ContactsList","filterContacts","toLowerCase","filteredContacts","nameText","onClick","onDeleteBtn","Filter","text","connect","useEffect","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.503021d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1xzQf\",\"input\":\"ContactForm_input__3imNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameText\":\"ContactList_nameText__2KH0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__19GR4\"};","const defaultContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n];\n\nexport default defaultContacts;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const deleteContacts = createAction(\"contacts/delete\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\nexport const addContacts = createAction(\"contacts/add\", (name, phone) => ({\n  payload: {\n    id: uuid(),\n    name,\n    phone,\n  },\n}));\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport defaultContacts from \"../base/defaultContacts\";\nimport { changeFilter, addContacts, deleteContacts } from \"./contacts-actions\";\n\nconst contactsReducer = createReducer(\n  JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultContacts,\n  {\n    [addContacts]: (state, { payload }) => [...state, payload],\n    [deleteContacts]: (state, { payload }) =>\n      state.filter((contact) => {\n        return contact.id !== payload;\n      }),\n  }\n);\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./contacts-reducer\";\nimport logger from \"redux-logger\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import propTypes from \"prop-types\";\nexport default function Section({ children, title }) {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\nimport { addContacts } from \"../../redux/contacts-actions\";\n\nexport default function ContactsForm() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const { contacts } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const onAddContacts = (name, phone) => dispatch(addContacts(name, phone));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isAdded = (name) =>\n      contacts.map((contact) => contact.name).includes(name);\n\n    if (isAdded(name)) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      onAddContacts(name, phone);\n    }\n\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={(e) => handleSubmit(e)}>\n        <label id=\"name\" htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <label id=\"phone\" htmlFor=\"phone\">\n          Phone\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          id=\"phone\"\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n        />\n        <button type=\"submit\" disabled={!(name && phone)}>\n          add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nContactsForm.propTypes = {\n  onAddContacts: propTypes.func,\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/contacts-actions\";\nimport propTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactsList() {\n  const { contacts, filter } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const onDeleteBtn = (id) => dispatch(deleteContacts(id));\n\n  const filteredContacts = (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filterContacts = filteredContacts(contacts, filter);\n\n  return (\n    <>\n      <ul>\n        {filterContacts.map(({ id, name, phone }) => (\n          <li key={id}>\n            <p className={s.nameText}>\n              {name}: <span>{phone}</span>\n            </p>\n            <button type=\"button\" onClick={(e) => onDeleteBtn(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  onDeleteBtn: propTypes.func,\n  contacts: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      phone: propTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts-actions\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = (e) => dispatch(changeFilter(e.target.value));\n  return (\n    <>\n      <label className={s.text} name=\"filter\" htmlFor=\"filter\" value={filter}>\n        Find contacts by name\n      </label>\n      <input\n        value={filter}\n        type=\"text\"\n        id=\"filter\"\n        onChange={handleChangeFilter}\n      />\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Section from \"./Section/Section\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport Filter from \"./Filter/Filter\";\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      {contacts.length ? (\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      ) : null}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}